{"version":3,"sources":["Todo.js","TodoList.js","App.js","index.js"],"names":["Todo","todo","toggleTodo","type","checked","complete","onChange","id","name","TodoList","todos","map","LOCAL_STORAGE_KEY","App","useState","setTodos","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","console","log","uuid","setItem","stringify","newTodos","find","ref","onClick","e","current","value","filter","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAEe,SAASA,EAAT,GAAqC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAKnC,OACE,8BACE,kCACE,uBAAOC,KAAK,WAAWC,QAASH,EAAKI,SAAUC,SAPrD,WACEJ,EAAWD,EAAKM,OAOXN,EAAKO,UCRC,SAASC,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOR,EAAc,EAAdA,WACxC,OACEQ,EAAMC,KAAI,SAAAV,GACR,OAAO,cAACD,EAAD,CAAoBE,WAAYA,EAAYD,KAAMA,GAAvCA,EAAKM,O,WCFvBK,EAAoB,gBA8CXC,MA5Cf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcK,EAAd,KACMC,EAAcC,mBA+BpB,OA7BAC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQX,IAChDO,GAAaJ,EAASI,GAC1BK,QAAQC,IAAIC,oBACX,IAEHR,qBAAU,WACRI,aAAaK,QAAQf,EAAmBQ,KAAKQ,UAAUlB,MACtD,CAACA,IAsBF,qCACE,cAACD,EAAD,CAAUC,MAAOA,EAAOR,WArB5B,SAAoBK,GAClB,IAAMsB,EAAQ,YAAOnB,GACfT,EAAO4B,EAASC,MAAK,SAAA7B,GAAI,OAAIA,EAAKM,KAAOA,KAC/CN,EAAKI,UAAYJ,EAAKI,SACtBU,EAASc,MAkBP,uBAAOE,IAAKf,EAAab,KAAK,SAC9B,wBAAQ6B,QAhBZ,SAAuBC,GACrB,IAAMzB,EAAOQ,EAAYkB,QAAQC,MACpB,KAAT3B,IACJO,EAAS,GAAD,mBAAKL,GAAL,CAAY,CAAEH,GAAImB,iBAAQlB,KAAMA,EAAMH,UAAU,MACxDW,EAAYkB,QAAQC,MAAQ,OAY1B,sBACA,wBAAQH,QAVZ,WACE,IAAMH,EAAWnB,EAAM0B,QAAO,SAAAnC,GAAI,OAAKA,EAAKI,YAC5CU,EAASc,IAQP,4BACA,gCAAMnB,EAAM0B,QAAO,SAAAnC,GAAI,OAAKA,EAAKI,YAAUgC,OAA3C,qBCzCNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a99537a9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Todo({ todo, toggleTodo }) {\r\n  function handleTodoClick() {\r\n    toggleTodo(todo.id)\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <label>\r\n        <input type=\"checkbox\" checked={todo.complete} onChange={handleTodoClick} />\r\n        {todo.name}\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nexport default function TodoList({ todos, toggleTodo }) {\r\n  return (\r\n    todos.map(todo => {\r\n      return <Todo key={todo.id} toggleTodo={toggleTodo} todo={todo} />\r\n    })\r\n  )\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList'\nimport {uuid} from 'uuidv4'\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const todoNameRef = useRef()\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if (storedTodos) setTodos(storedTodos)\n    console.log(uuid());\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  function toggleTodo(id) {\n    const newTodos = [...todos]\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n  }\n\n  function handleAddTodo(e) {\n    const name = todoNameRef.current.value\n    if (name === '') return\n    setTodos([...todos, { id: uuid(), name: name, complete: false}])\n    todoNameRef.current.value = null\n  }\n\n  function handleClearTodos() {\n    const newTodos = todos.filter(todo => !todo.complete)\n    setTodos(newTodos)\n  }\n\n  return (\n    <>\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n      <input ref={todoNameRef} type=\"text\" />\n      <button onClick={handleAddTodo}>Add Todo</button>\n      <button onClick={handleClearTodos}>Clear Complete</button>\n      <div>{todos.filter(todo => !todo.complete).length} left to do</div>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}